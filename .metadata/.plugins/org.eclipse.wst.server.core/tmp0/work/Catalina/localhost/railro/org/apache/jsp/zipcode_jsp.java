/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2016-08-19 14:11:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class zipcode_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	String addr="";
	String zipcode="";
	String zip1="";
	String zip2="";	
	List zipcodeList=(ArrayList)request.getAttribute("zipcodelist");

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>우편번호 찾기</title>\r\n");
      out.write("<script>\r\n");
      out.write("function setZipcode(zip1,zip2,addr){\r\n");
      out.write("\topener.document.forms[0].MEMBER_ZIPCODE1.value=zip1;\r\n");
      out.write("\topener.document.forms[0].MEMBER_ZIPCODE2.value=zip2;\r\n");
      out.write("\topener.document.forms[0].MEMBER_ADDR1.value=addr;\r\n");
      out.write("\tself.close();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("\tbackground-color: #f5f5f5;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table{\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr, td{\r\n");
      out.write("\theight: 35px;\r\n");
      out.write("\tline-height: 35px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit]{\r\n");
      out.write("    padding: 4px 10px;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    resize: none;\r\n");
      out.write("    font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=text]{\r\n");
      out.write("    padding: 5px 10px;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    resize: none;\r\n");
      out.write("    font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"370\" border=\"0\" cellspacing=\"0\" cellpadding=\"5\">\r\n");
      out.write("\t<tr align=\"center\">\r\n");
      out.write("\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t우편번호 검색<br />\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<form action=\"./MemberZipcodeAction.me\" method=\"post\" name=\"form\">\r\n");
      out.write("<table width=\"370\" border=\"0\" cellspacing=\"0\" cellpadding=\"5\">\r\n");
      out.write("\t<tr align=\"center\">\r\n");
      out.write("\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t지역명 : \r\n");
      out.write("\t\t\t<input type=\"text\" name=\"dong\" size=\"10\"/>\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"검색\"><br />\r\n");
      out.write("\t\t\t동을 입력하세요. (예:방배, 원천, 2글자 이상입력)\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("<br>\r\n");
      out.write("<table width=\"370\" border=\"0\" cellspacing=\"0\" cellpadding=\"5\">\r\n");
      out.write("<tr height=\"35\">\r\n");
      out.write("\t<td align=\"center\" colspan=\"2\">검색결과</td>\r\n");
      out.write("</tr>\r\n");
	
	if(zipcodeList!=null && zipcodeList.size()!=0){	
		for(int i=0;i<zipcodeList.size();i++){
			String data=(String)zipcodeList.get(i);
			
			StringTokenizer st=new StringTokenizer(data,",");
			zipcode=st.nextToken();
			addr=st.nextToken();
			
			zip1=zipcode.split("-")[0];
			zip2=zipcode.split("-")[1];

      out.write("<tr>\r\n");
      out.write("\t<td width=\"20%\">\r\n");
      out.write("\t<a href=\"#\"\tonclick=\"setZipcode(");
      out.print(zip1);
      out.write(',');
      out.print(zip2);
      out.write(',');
      out.write('\'');
      out.print(addr );
      out.write("')\">\r\n");
      out.write("\t\t<font size=\"2\">");
      out.print(zipcode);
      out.write("</font>\r\n");
      out.write("\t</a>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"80%\">");
      out.print(addr );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
		}
	}else{ 
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\" align=\"center\">검색 결과가 없습니다.</td>\r\n");
      out.write("</tr>\r\n");
	}
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
